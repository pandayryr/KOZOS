/* リンカ・スクリプト：機械語コードや静的領域のアドレスの割り当てをリンカに指示するファイル。 */

OUTPUT_FORMAT("elf32-h8300")
OUTPUT_ARCH(h8300h)
ENTRY("_start")

MEMORY
{
    /* 
        メモリの領域定義
        o: 領域の開始アドレス
        l: 領域のサイズ
    */

    /* RAMの定義 */
    ramall(rwx) : o = 0xffbf20, l = 0x004000    /* 16KB */
    ram(rwx)    : o = 0xffc020, l = 0x003f00    /* ELFヘッダ、プログラムヘッダ用に256バイトの空き領域を用意している */
    stack(rw)   : o = 0xffff00, l = 0x000000    /* RAMの終端。H8マイコンでは、スタックはアドレスの値の小さい方向に伸びていく(下方伸長) */
}

SECTIONS
{

    /* CPUが実行する機械語コードが置かれる領域 */
    .text :
    {
        _text_start = . ;   /* textセクションの先頭を示すシンボルを配置。シンボル化することにより、プログラムから位置を指定できるようになる。 */
        *(.text)            /* 全てのオブジェクトファイルの.text領域の内容を配置する */
        _etext = . ;        /* textセクションの終端を示すシンボルを配置 */
    } > ram

    /*
        rodata：Read Only data
        const定義した変数や、文字列リテラルなどを配置する
    */
    .rodata :
    {
        _rodata_start = . ;
        *(.strings)
        *(.rodata)
        *(.rodata.*)
        _erodata = . ;
    } > ram

    /* 初期値を持つ静的変数などが置かれる領域 */
    .data :
    {
        _data_start = . ;
        *(.data)
        _edata = . ;
    } > ram

    /* 
        初期値を持たない静的変数などが置かれる領域。
        初期値を持たないので実体はなく、サイズ情報のみ持っている。実体はプログラム実行時にメモリ上に確保される。
    */
    .bss :
    {
        _bss_start = . ;
        *(.bss)
        *(COMMON)
        _ebss = . ;
    } > ram

    . = ALIGN(4);   /* ロケーション・カウンタを4の倍数にする */
    _end = . ;

    .stack :
    {
        _stack = . ;
    } > stack
}
